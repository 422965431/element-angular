webpackJsonp([5],{906:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),n.d(e,"OthersModule",function(){return m});var o=n(10),l=n(2),p=n(50),i=n(979),a=n(96),c=n(924),r=n(925),s=n(211),u=this&&this.__decorate||function(t,e,n,o){var l,p=arguments.length,i=p<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,e,n,o);else for(var a=t.length-1;a>=0;a--)(l=t[a])&&(i=(p<3?l(i):p>3?l(e,n,i):l(e,n))||i);return p>3&&i&&Object.defineProperty(e,n,i),i},m=function(){function OthersModule(){}return OthersModule=u([Object(l.M)({declarations:[c.a,r.a],imports:[o.b,p.a,i.a,a.a,s.a],exports:[c.a],providers:[]})],OthersModule)}()},924:function(t,e,n){"use strict";n.d(e,"a",function(){return i});var o=n(2),l=this&&this.__decorate||function(t,e,n,o){var l,p=arguments.length,i=p<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,e,n,o);else for(var a=t.length-1;a>=0;a--)(l=t[a])&&(i=(p<3?l(i):p>3?l(e,n,i):l(e,n))||i);return p>3&&i&&Object.defineProperty(e,n,i),i},p=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},i=function(){function ExUserMainComponent(){}return ExUserMainComponent.prototype.ngOnInit=function(){},ExUserMainComponent=l([Object(o.o)({selector:"ex-user-main",template:n(980),styles:[n(981)]}),p("design:paramtypes",[])],ExUserMainComponent)}()},925:function(t,e,n){"use strict";n.d(e,"a",function(){return i});var o=n(2),l=n(982),p=this&&this.__decorate||function(t,e,n,o){var l,p=arguments.length,i=p<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,e,n,o);else for(var a=t.length-1;a>=0;a--)(l=t[a])&&(i=(p<3?l(i):p>3?l(e,n,i):l(e,n))||i);return p>3&&i&&Object.defineProperty(e,n,i),i},i=function(){function ExTooltipComponent(){this.code=l.a,this.page={previous:{name:"Radio 单选框",link:"/form/radio"},next:{name:"Input 输入框",link:"/form/input"}}}return ExTooltipComponent.prototype.ngOnInit=function(){},ExTooltipComponent=p([Object(o.o)({selector:"ex-tooltip",template:n(983),styles:[n(984)],encapsulation:o._19.None})],ExTooltipComponent)}()},979:function(t,e,n){"use strict";n.d(e,"a",function(){return r});var o=n(2),l=n(43),p=n(924),i=n(925),a=this&&this.__decorate||function(t,e,n,o){var l,p=arguments.length,i=p<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,e,n,o);else for(var a=t.length-1;a>=0;a--)(l=t[a])&&(i=(p<3?l(i):p>3?l(e,n,i):l(e,n))||i);return p>3&&i&&Object.defineProperty(e,n,i),i},c=[{path:"",component:p.a,children:[{path:"tooltip",component:i.a}]}],r=function(){function OthersRoutingModule(){}return OthersRoutingModule=a([Object(o.M)({imports:[l.d.forChild(c)],exports:[l.d]})],OthersRoutingModule)}()},980:function(t,e){t.exports="<router-outlet></router-outlet>\n"},981:function(t,e){t.exports=""},982:function(t,e,n){"use strict";e.a=['\n<div class="box">\n  <div class="top">\n    <el-tooltip placement="top-start">\n      <el-button>上左</el-button>\n      <ng-template #tip><span>placement is top-start</span></ng-template>\n    </el-tooltip>\n    <el-tooltip placement="top">\n      <el-button>上边</el-button>\n      <ng-template #tip> <span>placement is top</span> </ng-template>\n    </el-tooltip>\n    <el-tooltip placement="top-end">\n      <el-button>上右</el-button>\n      <ng-template #tip><span>placement is top-end</span></ng-template>\n    </el-tooltip>\n  </div>\n\n  <div class="left">\n    <el-tooltip placement="left-start">\n      <el-button>左上</el-button>\n      <ng-template #tip><span>placement is left-start</span></ng-template>\n    </el-tooltip>\n    <el-tooltip placement="left">\n      <el-button>左边</el-button>\n      <ng-template #tip><span>placement is left</span></ng-template>\n    </el-tooltip>\n    <el-tooltip placement="left-end">\n      <el-button>左下</el-button>\n      <ng-template #tip><span>placement is left-end</span></ng-template>\n    </el-tooltip>\n  </div>\n\n  <div class="right">\n    <el-tooltip placement="right-start">\n      <el-button>右上</el-button>\n      <ng-template #tip><span>placement is right-start</span></ng-template>\n    </el-tooltip>\n    <el-tooltip placement="right">\n      <el-button>右边</el-button>\n      <ng-template #tip><span>placement is right</span></ng-template>\n    </el-tooltip>\n    <el-tooltip placement="right-end">\n      <el-button>右下</el-button>\n      <ng-template #tip><span>placement is right-end</span></ng-template>\n    </el-tooltip>\n  </div>\n\n  <div class="bottom">\n    <el-tooltip placement="bottom-start">\n      <el-button>下左</el-button>\n      <ng-template #tip><span>placement is bottom-start</span></ng-template>\n    </el-tooltip>\n    <el-tooltip placement="bottom">\n      <el-button>下边</el-button>\n      <ng-template #tip><span>placement is bottom</span></ng-template>\n    </el-tooltip>\n    <el-tooltip placement="bottom-end">\n      <el-button>下右</el-button>\n      <ng-template #tip> <span>placement is bottom-end</span> </ng-template>\n    </el-tooltip>\n  </div>\n</div>\n','\n<el-tooltip placement="top">\n  <el-button>Dark</el-button>\n  <ng-template #tip>\n    <span>Top center</span>\n  </ng-template>\n</el-tooltip>\n\n<el-tooltip placement="bottom" effect="light">\n  <el-button>Light</el-button>\n  <ng-template #tip>\n    <span>Bottom center</span>\n  </ng-template>\n</el-tooltip>\n','\n<el-tooltip placement="bottom" [disabled]="true">\n  <el-button>Disabled</el-button>\n  <ng-template #tip>\n    <span>Top center</span>\n  </ng-template>\n</el-tooltip>\n']},983:function(t,e){t.exports='<h2>Tooltip 文字提示</h2>\n<p>常用于展示鼠标 hover 时的提示信息。</p>\n<p>与其他组件一样，此组件未依赖任何第三方组件，这是与 <code>element-vue</code> 的不同之处。</p>\n\n<h3>基础用法</h3>\n<p>在这里我们提供 9 种不同方向的展示方式，可以通过以下完整示例来理解，选择你要的效果。</p>\n<ex-demo link="2" [code]="code[0]" notes="使用 <code>ng-template</code> 的 <code>#tip</code>\n属性来决定 hover 时的提示信息或模板。由 <code>placement</code> 属性决定展示效果，提示框体展示的位置与朝向。具体请参阅组件接口文档。">\n</ex-demo>\n\n<h3>主题</h3>\n<p>Tooltip 组件提供了两个不同的主题：<code>dark</code> 和 <code>light</code>。</p>\n<ex-demo link="2" [code]="code[1]" notes="通过设置 <code>effect</code> 属性来改变主题，默认为 <code>dark</code>">\n</ex-demo>\n\n<h3>禁用</h3>\n<p>设置提示禁用</p>\n<ex-demo link="2" [code]="code[2]" notes="设置禁用后不会影响内容本身的响应，但不再弹出提示。">\n</ex-demo>\n\n\n<ex-document doc="tooltip"></ex-document>\n\n<ex-footer-nav [page]="page"></ex-footer-nav>\n'},984:function(t,e){t.exports=".box {\n  width: 400px;\n  padding-left: 100px; }\n\n.top {\n  text-align: center; }\n\n.left {\n  float: left;\n  width: 60px; }\n\n.right {\n  float: right;\n  width: 60px; }\n\n.bottom {\n  clear: both;\n  text-align: center; }\n\n.item {\n  margin: 4px; }\n\n.left .el-tooltip__popper,\n.right .el-tooltip__popper {\n  padding: 8px 10px; }\n"}});